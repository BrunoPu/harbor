---
# Source: harbor/templates/core/core-dpl.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-harbor-core
  labels:
    app.kubernetes.io/name: harbor
    helm.sh/chart: harbor-9.8.3
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: core
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: harbor
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/component: core
  template:
    metadata:
      labels:
        app.kubernetes.io/name: harbor
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/component: core
      annotations:
        checksum/configmap: 97978fdfdedecdc6c7beabf54e0fe08f0f5ca07a0d84a208f525347a99eeb6f6
        checksum/configmap-envvars: 4633fde5add4b9c3b051f540c5b465bfdfd05ecf13f6fbf057eb6894e9aeaf61
        checksum/secret: d42f63ee9d5f60976262267a84f35f26f22e05f09c5b1a1d3f4dd5cc419b96a6
        checksum/secret-envvars: 62130c50dee59836368a9ce39de2d2f1c46b3c3f325c70fe7562eb4a90345d15
        checksum/secret-jobservice: cda8fff240da049d7857d18188334458fad7cbacff20644e75125924439a41e0
    spec:
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: harbor
                    app.kubernetes.io/instance: RELEASE-NAME
                    app.kubernetes.io/component: core
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: core
          image: docker.io/bitnami/harbor-core:2.2.0-debian-10-r29
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          livenessProbe:
            httpGet:
              path: /api/v2.0/ping
              scheme: HTTP
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /api/v2.0/ping
              scheme: HTTP
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          startupProbe:
            httpGet:
              path: /api/v2.0/ping
              scheme: HTTP
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          envFrom:
            - configMapRef:
                name: RELEASE-NAME-harbor-core-envvars
            - secretRef:
                name: RELEASE-NAME-harbor-core-envvars
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: CORE_SECRET
              valueFrom:
                secretKeyRef:
                  name: RELEASE-NAME-harbor-core
                  key: secret
            - name: JOBSERVICE_SECRET
              valueFrom:
                secretKeyRef:
                  name: RELEASE-NAME-harbor-jobservice
                  key: secret
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: config
              mountPath: /etc/core/app.conf
              subPath: app.conf
            - name: secret-key
              mountPath: /etc/core/key
              subPath: key
            - name: token-service-private-key
              mountPath: /etc/core/private_key.pem
              subPath: tls.key
            - name: ca-download
              mountPath: /etc/core/ca
            - name: psc
              mountPath: /etc/core/token
          resources:
            limits: {}
            requests: {}
      volumes:
        - name: config
          configMap:
            name: RELEASE-NAME-harbor-core
            items:
              - key: app.conf
                path: app.conf
        - name: secret-key
          secret:
            secretName: RELEASE-NAME-harbor-core
            items:
              - key: secretKey
                path: key
        - name: token-service-private-key
          secret:
            secretName: RELEASE-NAME-harbor-core
        - name: ca-download
          secret:
            secretName: RELEASE-NAME-harbor-nginx
        - name: psc
          emptyDir: {}
