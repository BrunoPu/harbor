---
# Source: harbor/templates/jobservice/jobservice-dpl.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-harbor-jobservice
  labels:
    app.kubernetes.io/name: harbor
    helm.sh/chart: harbor-9.8.3
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jobservice
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: harbor
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/component: jobservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: harbor
        helm.sh/chart: harbor-9.8.3
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: jobservice
      annotations:
        checksum/configmap: 3567fae557b2882d25de744071d3b906406c8c6eb8839c17a0672f421e8c194c
        checksum/configmap-env: 3d1c017757ea8bdf7977187f6f439a44c09e0ac10cb7b8f308ce49472536c1d5
        checksum/secret-env: 15a99fa8666c7d2c6923761d17015443ea1110a7c4efd11806d68d22e4159df2
        checksum/secret: ff35df56e5e1025ef39ada3c9be2ad68bba46d158e96db9ee0cd4016ff354788
        checksum/secret-core: 9645394e523e15201cd4a68a937b55fed260228f92e11ec3301ffcc3d274f584
    spec:
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: harbor
                    app.kubernetes.io/instance: RELEASE-NAME
                    app.kubernetes.io/component: jobservice
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: jobservice
          image: docker.io/bitnami/harbor-jobservice:2.2.0-debian-10-r32
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          livenessProbe:
            httpGet:
              path: /api/v1/stats
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /api/v1/stats
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: CORE_SECRET
              valueFrom:
                secretKeyRef:
                  name: RELEASE-NAME-harbor-core
                  key: secret
            - name: JOBSERVICE_SECRET
              valueFrom:
                secretKeyRef:
                  name: RELEASE-NAME-harbor-jobservice
                  key: secret
          envFrom:
            - configMapRef:
                name: RELEASE-NAME-harbor-jobservice-envvars
            - secretRef:
                name: RELEASE-NAME-harbor-jobservice-envvars
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: jobservice-config
              mountPath: /etc/jobservice/config.yml
              subPath: config.yml
            - name: job-logs
              mountPath: /var/log/jobs
              subPath: 
      volumes:
        - name: jobservice-config
          configMap:
            name: RELEASE-NAME-harbor-jobservice
        - name: job-logs
          persistentVolumeClaim:
            claimName: RELEASE-NAME-harbor-jobservice
